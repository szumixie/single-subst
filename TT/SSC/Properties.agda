{-# OPTIONS
  --without-K
  --prop
  --rewriting
  --confluence-check
  --hidden-argument-puns #-}

module TT.SSC.Properties where

open import TT.Lib
open import TT.SSC
open import TT.SSC.AlphaNf

infixl 2 _++_ _▹_
infixl 9 _∘_ _[_]ᵀ* _[_]ᵗ* _[_]ᵀˡ _[_]ᵀˡ*
infixl 10 _⁺* _⁺^ _⁺^* _⁺^ʷ

private variable
  i i₀ i₁ j : ℕ
  Γ Γ₀ Γ₁ Δ Δ₀ Δ₁ Θ Θ₀ Θ₁ : Con
  γ : Sub Δ Γ
  A A₀ A₁ B : Ty Γ i
  a a₀ a₁ b f α : Tm Γ A
  x : Var Γ A

data Sub* : Con → Con → Set where
  ⌜_⌝ : Sub Δ Γ → Sub* Δ Γ
  _∘_ : Sub* Δ Γ → Sub* Θ Δ → Sub* Θ Γ
  id : Sub* Γ Γ

_[_]ᵀ* : Ty Γ i → Sub* Δ Γ → Ty Δ i
A [ ⌜ γ ⌝ ]ᵀ* = A [ γ ]ᵀ
A [ γ* ∘ δ* ]ᵀ* = A [ γ* ]ᵀ* [ δ* ]ᵀ*
A [ id ]ᵀ* = A

_[_]ᵗ* : Tm Γ A → (γ* : Sub* Δ Γ) → Tm Δ (A [ γ* ]ᵀ*)
a [ ⌜ γ ⌝ ]ᵗ* = a [ γ ]ᵗ
a [ γ* ∘ δ* ]ᵗ* = a [ γ* ]ᵗ* [ δ* ]ᵗ*
a [ id ]ᵗ* = a

_⁺* : (γ* : Sub* Δ Γ) → Sub* (Δ ▹ A [ γ* ]ᵀ*) (Γ ▹ A)
⌜ γ ⌝ ⁺* = ⌜ γ ⁺ ⌝
(γ* ∘ δ*) ⁺* = γ* ⁺* ∘ δ* ⁺*
id ⁺* = id

private variable
  γ*₀ γ*₁ δ*₀ δ*₁ : Sub* Δ Γ

opaque
  unfolding coe

  ap-Sub* : Δ₀ ≡ Δ₁ → Γ₀ ≡ Γ₁ → Sub* Δ₀ Γ₀ ≡ Sub* Δ₁ Γ₁
  ap-Sub* refl refl = refl

  apᵈ-∘* :
    (Δ₀₁ : Δ₀ ≡ Δ₁) (Γ₀₁ : Γ₀ ≡ Γ₁) → γ*₀ ≡[ ap-Sub* Δ₀₁ Γ₀₁ ] γ*₁ →
    (Θ₀₁ : Θ₀ ≡ Θ₁) → δ*₀ ≡[ ap-Sub* Θ₀₁ Δ₀₁ ] δ*₁ →
    γ*₀ ∘ δ*₀ ≡[ ap-Sub* Θ₀₁ Γ₀₁ ] γ*₁ ∘ δ*₁
  apᵈ-∘* refl refl refl refl refl = refl

  ap-[]ᵀ* : A₀ ≡ A₁ → (γ* : Sub* Δ Γ) → A₀ [ γ* ]ᵀ* ≡ A₁ [ γ* ]ᵀ*
  ap-[]ᵀ* refl _ = refl

  apᵈ-[]ᵀ* :
    (Δ₀₁ : Δ₀ ≡ Δ₁) →
    γ*₀ ≡[ ap-Sub* Δ₀₁ refl ] γ*₁ → A [ γ*₀ ]ᵀ* ≡[ ap-Ty Δ₀₁ ] A [ γ*₁ ]ᵀ*
  apᵈ-[]ᵀ* refl refl = refl

  apᵈ-[]ᵗ* :
    (A₀₁ : A₀ ≡ A₁) → a₀ ≡[ ap-Tm A₀₁ ] a₁ → (γ* : Sub* Δ Γ) →
    a₀ [ γ* ]ᵗ* ≡[ ap-Tm (ap-[]ᵀ* A₀₁ γ*) ] a₁ [ γ* ]ᵗ*
  apᵈ-[]ᵗ* refl refl _ = refl

  apᵈ-[]ᵗ*₂ :
    {A : Ty Γ i} {a : Tm Γ A} →
    (Δ₀₁ : Δ₀ ≡ Δ₁) (γ₀₁ : γ*₀ ≡[ ap-Sub* Δ₀₁ refl ] γ*₁) →
    a [ γ*₀ ]ᵗ* ≡[ ap-Tm₂ Δ₀₁ (apᵈ-[]ᵀ* Δ₀₁ γ₀₁) ] a [ γ*₁ ]ᵗ*
  apᵈ-[]ᵗ*₂ refl refl = refl

  apᵈ-[]ᵗ*₃ :
    {A : Ty Γ i} {a₀ a₁ : Tm Γ A} →
    a₀ ≡ a₁ → (Δ₀₁ : Δ₀ ≡ Δ₁) (γ₀₁ : γ*₀ ≡[ ap-Sub* Δ₀₁ refl ] γ*₁) →
    a₀ [ γ*₀ ]ᵗ* ≡[ ap-Tm₂ Δ₀₁ (apᵈ-[]ᵀ* Δ₀₁ γ₀₁) ] a₁ [ γ*₁ ]ᵗ*
  apᵈ-[]ᵗ*₃ refl refl refl = refl

  coe-[]ᵗ* :
    (A₀₁ : A₀ ≡ A₁) (γ* : Sub* Δ Γ) →
    coe (ap-Tm (ap-[]ᵀ* A₀₁ γ*)) (a [ γ* ]ᵗ*) ≡ coe (ap-Tm A₀₁) a [ γ* ]ᵗ*
  coe-[]ᵗ* refl _ = refl

p-⁺ᵀ* :
  (γ* : Sub* Δ Γ) →
  B [ p ]ᵀ [ γ* ⁺* ]ᵀ* ≡ B [ γ* ]ᵀ* [ p ]ᵀ ∈ Ty (Δ ▹ A [ γ* ]ᵀ*) i
p-⁺ᵀ* ⌜ γ ⌝ = p-⁺ᵀ
p-⁺ᵀ* (γ* ∘ δ*) = ap-[]ᵀ* (p-⁺ᵀ* γ*) (δ* ⁺*) ∙ p-⁺ᵀ* δ*
p-⁺ᵀ* id = refl

vz-⁺* :
  (γ* : Sub* Δ Γ) →
  var vz [ γ* ⁺* ]ᵗ* ≡[ ap-Tm (p-⁺ᵀ* γ*) ]
  var vz ∈ Tm (Δ ▹ A [ γ* ]ᵀ*) (A [ γ* ]ᵀ* [ p ]ᵀ)
vz-⁺* ⌜ γ ⌝ = vz-⁺
vz-⁺* (γ* ∘ δ*) = apᵈ-[]ᵗ* (p-⁺ᵀ* γ*) (vz-⁺* γ*) (δ* ⁺*) ∙ᵈ vz-⁺* δ*
vz-⁺* id = reflᵈ

⟨⟩-[]ᵀ* :
  (γ* : Sub* Δ Γ) → B [ ⟨ a ⟩ ]ᵀ [ γ* ]ᵀ* ≡ B [ γ* ⁺* ]ᵀ* [ ⟨ a [ γ* ]ᵗ* ⟩ ]ᵀ
⟨⟩-[]ᵀ* ⌜ γ ⌝ = ⟨⟩-[]ᵀ
⟨⟩-[]ᵀ* (γ* ∘ δ*) = ap-[]ᵀ* (⟨⟩-[]ᵀ* γ*) δ* ∙ ⟨⟩-[]ᵀ* δ*
⟨⟩-[]ᵀ* id = refl

U-[]* : (γ* : Sub* Δ Γ) → U i [ γ* ]ᵀ* ≡ U i
U-[]* ⌜ γ ⌝ = U-[]
U-[]* (γ* ∘ δ*) = ap-[]ᵀ* (U-[]* γ*) δ* ∙ U-[]* δ*
U-[]* id = refl

El-[]* :
  (γ* : Sub* Δ Γ) → El α [ γ* ]ᵀ* ≡ El (coe (ap-Tm (U-[]* γ*)) (α [ γ* ]ᵗ*))
El-[]* ⌜ γ ⌝ = El-[]
El-[]* (γ* ∘ δ*) =
  ap-[]ᵀ* (El-[]* γ*) δ* ∙
  El-[]* δ* ∙
  ap-El (splitr (symᵈ (coe-[]ᵗ* (U-[]* γ*) δ*)))
El-[]* id = ap-El (undep refl)

c-[]* : (γ* : Sub* Δ Γ) → c A [ γ* ]ᵗ* ≡[ ap-Tm (U-[]* γ*) ] c (A [ γ* ]ᵀ*)
c-[]* ⌜ γ ⌝ = c-[]
c-[]* (γ* ∘ δ*) = apᵈ-[]ᵗ* (U-[]* γ*) (c-[]* γ*) δ* ∙ᵈ c-[]* δ*
c-[]* id = reflᵈ

Π-[]* : (γ* : Sub* Δ Γ) → Π A B [ γ* ]ᵀ* ≡ Π (A [ γ* ]ᵀ*) (B [ γ* ⁺* ]ᵀ*)
Π-[]* ⌜ γ ⌝ = Π-[]
Π-[]* (γ* ∘ δ*) = ap-[]ᵀ* (Π-[]* γ*) δ* ∙ Π-[]* δ*
Π-[]* id = refl

app-[]* :
  (γ* : Sub* Δ Γ) →
  app f a [ γ* ]ᵗ* ≡[ ap-Tm (⟨⟩-[]ᵀ* γ*) ]
  app (coe (ap-Tm (Π-[]* γ*)) (f [ γ* ]ᵗ*)) (a [ γ* ]ᵗ*)
app-[]* ⌜ γ ⌝ = app-[]
app-[]* (γ* ∘ δ*) =
  apᵈ-[]ᵗ* (⟨⟩-[]ᵀ* γ*) (app-[]* γ*) δ* ∙ᵈ
  app-[]* δ* ∙ᵈ
  dep (ap-app (splitr (symᵈ (coe-[]ᵗ* (Π-[]* γ*) δ*))))
app-[]* id = dep (ap-app (undep refl))

lam-[]* :
  (γ* : Sub* Δ Γ) → lam b [ γ* ]ᵗ* ≡[ ap-Tm (Π-[]* γ*) ] lam (b [ γ* ⁺* ]ᵗ*)
lam-[]* ⌜ γ ⌝ = lam-[]
lam-[]* (γ* ∘ δ*) = apᵈ-[]ᵗ* (Π-[]* γ*) (lam-[]* γ*) δ* ∙ᵈ lam-[]* δ*
lam-[]* id = reflᵈ

data Tel (Γ : Con) : Set
_++_ : (Γ : Con) → Tel Γ → Con

data Tel Γ where
  ◇ : Tel Γ
  _▹_ : (Ω : Tel Γ) → Ty (Γ ++ Ω) i → Tel Γ

Γ ++ ◇ = Γ
Γ ++ (Ω ▹ A) = (Γ ++ Ω) ▹ A

private variable
  Ω Ω₀ Ω₁ : Tel Γ

_[_]ᵀˡ : Tel Γ → Sub Δ Γ → Tel Δ
_⁺^ : (γ : Sub Δ Γ) → Sub (Δ ++ Ω [ γ ]ᵀˡ) (Γ ++ Ω)

◇ [ γ ]ᵀˡ = ◇
(Ω ▹ A) [ γ ]ᵀˡ = Ω [ γ ]ᵀˡ ▹ A [ γ ⁺^ ]ᵀ

_⁺^ {Ω = ◇} γ = γ
_⁺^ {Ω = Ω ▹ A} γ = γ ⁺^ ⁺

_[_]ᵀˡ* : Tel Γ → Sub* Δ Γ → Tel Δ
Ω [ ⌜ γ ⌝ ]ᵀˡ* = Ω [ γ ]ᵀˡ
Ω [ γ* ∘ δ* ]ᵀˡ* = Ω [ γ* ]ᵀˡ* [ δ* ]ᵀˡ*
Ω [ id ]ᵀˡ* = Ω

_⁺^* : (γ* : Sub* Δ Γ) → Sub* (Δ ++ Ω [ γ* ]ᵀˡ*) (Γ ++ Ω)
⌜ γ ⌝ ⁺^* = ⌜ γ ⁺^ ⌝
(γ* ∘ δ*) ⁺^* = γ* ⁺^* ∘ δ* ⁺^*
id ⁺^* = id

opaque
  unfolding coe

  ap-++ : Ω₀ ≡ Ω₁ → (Γ ++ Ω₀) ≡ (Γ ++ Ω₁)
  ap-++ refl = refl

  ap-▹ᵀˡ :
    (Ω₀₁ : Ω₀ ≡ Ω₁) → A₀ ≡[ ap-Ty (ap-++ Ω₀₁) ] A₁ → (Ω₀ ▹ A₀) ≡ (Ω₁ ▹ A₁)
  ap-▹ᵀˡ refl refl = refl

  ▹ᵀˡ-inj-Ω : (Ω₀ ▹ A₀) ≡ (Ω₁ ▹ A₁) → Ω₀ ≡ Ω₁
  ▹ᵀˡ-inj-Ω refl = refl

  ▹ᵀˡ-inj-i :
    (Ω▹A₀₁ : (Ω₀ ▹ A₀ ∈ Ty (Γ ++ Ω₀) i₀) ≡ (Ω₁ ▹ A₁ ∈ Ty (Γ ++ Ω₁) i₁)) →
    i₀ ≡ i₁
  ▹ᵀˡ-inj-i refl = refl

  ▹ᵀˡ-inj-A :
    (Ω▹A₀₁ : (Ω₀ ▹ A₀) ≡ (Ω₁ ▹ A₁)) →
    A₀ ≡[ ap-Ty₂ (ap-++ (▹ᵀˡ-inj-Ω Ω▹A₀₁)) (▹ᵀˡ-inj-i Ω▹A₀₁) ] A₁
  ▹ᵀˡ-inj-A refl = refl

  ap-[]ᵀˡ* : Ω₀ ≡ Ω₁ → (γ* : Sub* Δ Γ) → Ω₀ [ γ* ]ᵀˡ* ≡ Ω₁ [ γ* ]ᵀˡ*
  ap-[]ᵀˡ* refl _ = refl

  apᵈ-⁺^* :
    (γ* : Sub* Δ Γ) (Ω₀₁ : Ω₀ ≡ Ω₁) →
    γ* ⁺^* ≡[ ap-Sub* (ap-++ (ap-[]ᵀˡ* Ω₀₁ γ*)) (ap-++ Ω₀₁) ] γ* ⁺^*
  apᵈ-⁺^* _ refl = refl

◇-[]ᵀˡ* : (γ* : Sub* Δ Γ) → ◇ [ γ* ]ᵀˡ* ≡ ◇
◇-[]ᵀˡ* ⌜ γ ⌝ = refl
◇-[]ᵀˡ* (γ* ∘ δ*) = ap-[]ᵀˡ* (◇-[]ᵀˡ* γ*) δ* ∙ ◇-[]ᵀˡ* δ*
◇-[]ᵀˡ* id = refl

▹-[]ᵀˡ* : (γ* : Sub* Δ Γ) → (Ω ▹ A) [ γ* ]ᵀˡ* ≡ (Ω [ γ* ]ᵀˡ* ▹ A [ γ* ⁺^* ]ᵀ*)
▹-[]ᵀˡ* ⌜ γ ⌝ = refl
▹-[]ᵀˡ* (γ* ∘ δ*) = ap-[]ᵀˡ* (▹-[]ᵀˡ* γ*) δ* ∙ ▹-[]ᵀˡ* δ*
▹-[]ᵀˡ* id = refl

⁺^*-◇ : (γ* : Sub* Δ Γ) → γ* ⁺^* ≡[ ap-Sub* (ap-++ (◇-[]ᵀˡ* γ*)) refl ] γ*
⁺^*-◇ ⌜ γ ⌝ = reflᵈ
⁺^*-◇ (γ* ∘ δ*) =
  apᵈ-∘*
    (ap-++ (◇-[]ᵀˡ* γ*))
    refl
    (⁺^*-◇ γ*)
    (ap-++ (ap-[]ᵀˡ* (◇-[]ᵀˡ* γ*) δ* ∙ ◇-[]ᵀˡ* δ*))
    (apᵈ-⁺^* δ* (◇-[]ᵀˡ* γ*) ∙ᵈ ⁺^*-◇ δ*)
⁺^*-◇ id = reflᵈ

⁺^*-▹ :
  (γ* : Sub* Δ Γ) →
  γ* ⁺^* ≡[ ap-Sub* (ap-++ (▹-[]ᵀˡ* γ*)) refl ]
  γ* ⁺^* ⁺* ∈ Sub* (Δ ++ Ω [ γ* ]ᵀˡ* ▹ A [ γ* ⁺^* ]ᵀ*) (Γ ++ Ω ▹ A)
⁺^*-▹ ⌜ γ ⌝ = reflᵈ
⁺^*-▹ (γ* ∘ δ*) =
  apᵈ-∘*
    (ap-++ (▹-[]ᵀˡ* γ*))
    refl
    (⁺^*-▹ γ*)
    (ap-++ (ap-[]ᵀˡ* (▹-[]ᵀˡ* γ*) δ* ∙ ▹-[]ᵀˡ* δ*))
    (apᵈ-⁺^* δ* (▹-[]ᵀˡ* γ*) ∙ᵈ ⁺^*-▹ δ*)
⁺^*-▹ id = reflᵈ

module _
  (γ*₀ γ*₁ : Sub* Δ Γ) (γ*₀₁ᵀ : ∀ {i} {A : Ty Γ i} → A [ γ*₀ ]ᵀ* ≡ A [ γ*₁ ]ᵀ*)
  where
  []→⁺^ᵛᵀ :
    (Ω-γ*₀₁ : Ω [ γ*₀ ]ᵀˡ* ≡ Ω [ γ*₁ ]ᵀˡ*) → Var (Γ ++ Ω) A →
    A [ γ*₀ ⁺^* ]ᵀ* ≡[ ap-Ty (ap-++ Ω-γ*₀₁) ] A [ γ*₁ ⁺^* ]ᵀ*
  []→⁺^ᵛᵀ {Ω = ◇} ◇-γ*₀₁ x =
    apᵈ-[]ᵀ* (ap-++ (◇-[]ᵀˡ* γ*₀)) (⁺^*-◇ γ*₀) ∙ᵈ
    dep γ*₀₁ᵀ ∙ᵈ
    apᵈ-[]ᵀ* (ap-++ (sym (◇-[]ᵀˡ* γ*₁))) (symᵈ (⁺^*-◇ γ*₁))
  []→⁺^ᵛᵀ {Ω = Ω ▹ A} Ω▹A-γ*₀₁ vz =
    apᵈ-[]ᵀ* (ap-++ (▹-[]ᵀˡ* γ*₀)) (⁺^*-▹ γ*₀) ∙ᵈ
    dep (p-⁺ᵀ* (γ*₀ ⁺^*)) ∙ᵈ
    apᵈ-[]ᵀ
      (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-γ*₀₁′))
      (▹ᵀˡ-inj-A Ω▹A-γ*₀₁′)
      (ap-▹ (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-γ*₀₁′)) (▹ᵀˡ-inj-A Ω▹A-γ*₀₁′))
      (apᵈ-p (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-γ*₀₁′)) (▹ᵀˡ-inj-A Ω▹A-γ*₀₁′)) ∙ᵈ
    dep (sym (p-⁺ᵀ* (γ*₁ ⁺^*))) ∙ᵈ
    apᵈ-[]ᵀ* (ap-++ (sym (▹-[]ᵀˡ* γ*₁))) (symᵈ (⁺^*-▹ γ*₁))
    where
    Ω▹A-γ*₀₁′ :
      (Ω [ γ*₀ ]ᵀˡ* ▹ A [ γ*₀ ⁺^* ]ᵀ*) ≡ (Ω [ γ*₁ ]ᵀˡ* ▹ A [ γ*₁ ⁺^* ]ᵀ*)
    Ω▹A-γ*₀₁′ = sym (▹-[]ᵀˡ* γ*₀) ∙ Ω▹A-γ*₀₁ ∙ ▹-[]ᵀˡ* γ*₁
  []→⁺^ᵛᵀ {Ω = Ω ▹ A} Ω▹A-γ*₀₁ (vs x) =
    apᵈ-[]ᵀ* (ap-++ (▹-[]ᵀˡ* γ*₀)) (⁺^*-▹ γ*₀) ∙ᵈ
    dep (p-⁺ᵀ* (γ*₀ ⁺^*)) ∙ᵈ
    apᵈ-[]ᵀ
      (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-γ*₀₁′))
      ([]→⁺^ᵛᵀ (▹ᵀˡ-inj-Ω Ω▹A-γ*₀₁′) x)
      (ap-▹ (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-γ*₀₁′)) (▹ᵀˡ-inj-A Ω▹A-γ*₀₁′))
      (apᵈ-p (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-γ*₀₁′)) (▹ᵀˡ-inj-A Ω▹A-γ*₀₁′)) ∙ᵈ
    dep (sym (p-⁺ᵀ* (γ*₁ ⁺^*))) ∙ᵈ
    apᵈ-[]ᵀ* (ap-++ (sym (▹-[]ᵀˡ* γ*₁))) (symᵈ (⁺^*-▹ γ*₁))
    where
    Ω▹A-γ*₀₁′ :
      (Ω [ γ*₀ ]ᵀˡ* ▹ A [ γ*₀ ⁺^* ]ᵀ*) ≡ (Ω [ γ*₁ ]ᵀˡ* ▹ A [ γ*₁ ⁺^* ]ᵀ*)
    Ω▹A-γ*₀₁′ = sym (▹-[]ᵀˡ* γ*₀) ∙ Ω▹A-γ*₀₁ ∙ ▹-[]ᵀˡ* γ*₁

module var-⁺^→⁺^
  (γ*₀ γ*₁ : Sub* Δ Γ) (γ*₀₁ᵀ : ∀ {i} {A : Ty Γ i} → A [ γ*₀ ]ᵀ* ≡ A [ γ*₁ ]ᵀ*)
  (var-γ*₀₁-⁺^ :
    ∀ {i Ω} {A : Ty (Γ ++ Ω) i} {x : Var (Γ ++ Ω) A}
    (Ω-γ*₀₁ : Ω [ γ*₀ ]ᵀˡ* ≡ Ω [ γ*₁ ]ᵀˡ*) →
    var x [ γ*₀ ⁺^* ]ᵗ*
      ≡[ ap-Tm₂ (ap-++ Ω-γ*₀₁) ([]→⁺^ᵛᵀ γ*₀ γ*₁ γ*₀₁ᵀ Ω-γ*₀₁ x) ]
    var x [ γ*₁ ⁺^* ]ᵗ*)
  where
  private
    var-⁺^→⁺^ᵀ₀ :
      (Ω-γ*₀₁ : Ω [ γ*₀ ]ᵀˡ* ≡ Ω [ γ*₁ ]ᵀˡ*) → NTy (Γ ++ Ω) i A →
      A [ γ*₀ ⁺^* ]ᵀ* ≡[ ap-Ty (ap-++ Ω-γ*₀₁) ] A [ γ*₁ ⁺^* ]ᵀ*
    var-⁺^→⁺^ᵗᵀ₀ :
      (Ω-γ*₀₁ : Ω [ γ*₀ ]ᵀˡ* ≡ Ω [ γ*₁ ]ᵀˡ*) → NTm (Γ ++ Ω) A a →
      A [ γ*₀ ⁺^* ]ᵀ* ≡[ ap-Ty (ap-++ Ω-γ*₀₁) ] A [ γ*₁ ⁺^* ]ᵀ*
    var-⁺^→⁺^ᵗ₀ :
      (Ω-γ*₀₁ : Ω [ γ*₀ ]ᵀˡ* ≡ Ω [ γ*₁ ]ᵀˡ*) (aᴺ : NTm (Γ ++ Ω) A a) →
      a [ γ*₀ ⁺^* ]ᵗ* ≡[ ap-Tm₂ (ap-++ Ω-γ*₀₁) (var-⁺^→⁺^ᵗᵀ₀ Ω-γ*₀₁ aᴺ) ]
      a [ γ*₁ ⁺^* ]ᵗ*

    var-⁺^→⁺^ᵀ₀ Ω-γ*₀₁ (Uᴺ i) =
      dep (U-[]* (γ*₀ ⁺^*)) ∙ᵈ
      apᵈ-U (ap-++ Ω-γ*₀₁) ∙ᵈ
      dep (sym (U-[]* (γ*₁ ⁺^*)))
    var-⁺^→⁺^ᵀ₀ Ω-γ*₀₁ (Elᴺ αᴺ) =
      dep (El-[]* (γ*₀ ⁺^*)) ∙ᵈ
      apᵈ-El (ap-++ Ω-γ*₀₁) (splitlr (var-⁺^→⁺^ᵗ₀ Ω-γ*₀₁ αᴺ)) ∙ᵈ
      dep (sym (El-[]* (γ*₁ ⁺^*)))
    var-⁺^→⁺^ᵀ₀ Ω-γ*₀₁ (Πᴺ Aᴺ Bᴺ) =
      dep (Π-[]* (γ*₀ ⁺^*)) ∙ᵈ
      apᵈ-Π
        (ap-++ Ω-γ*₀₁)
        (var-⁺^→⁺^ᵀ₀ Ω-γ*₀₁ Aᴺ)
        ( apᵈ-[]ᵀ* (ap-++ (sym (▹-[]ᵀˡ* γ*₀))) (symᵈ (⁺^*-▹ γ*₀)) ∙ᵈ
          var-⁺^→⁺^ᵀ₀
            ( ▹-[]ᵀˡ* γ*₀ ∙
              ap-▹ᵀˡ Ω-γ*₀₁ (var-⁺^→⁺^ᵀ₀ Ω-γ*₀₁ Aᴺ) ∙
              sym (▹-[]ᵀˡ* γ*₁))
            Bᴺ ∙ᵈ
          apᵈ-[]ᵀ* (ap-++ (▹-[]ᵀˡ* γ*₁)) (⁺^*-▹ γ*₁)) ∙ᵈ
      dep (sym (Π-[]* (γ*₁ ⁺^*)))

    var-⁺^→⁺^ᵗᵀ₀ Ω-γ*₀₁ (varᴺ x) = []→⁺^ᵛᵀ γ*₀ γ*₁ γ*₀₁ᵀ Ω-γ*₀₁ x
    var-⁺^→⁺^ᵗᵀ₀ Ω-γ*₀₁ (cᴺ Aᴺ) =
      dep (U-[]* (γ*₀ ⁺^*)) ∙ᵈ
      apᵈ-U (ap-++ Ω-γ*₀₁) ∙ᵈ
      dep (sym (U-[]* (γ*₁ ⁺^*)))

    var-⁺^→⁺^ᵗᵀ₀ Ω-γ*₀₁ (appᴺ _ Bᴺ fᴺ aᴺ) =
      dep (⟨⟩-[]ᵀ* (γ*₀ ⁺^*)) ∙ᵈ
      apᵈ-[]ᵀ
        (ap-▹ (ap-++ Ω-γ*₀₁) (var-⁺^→⁺^ᵗᵀ₀ Ω-γ*₀₁ aᴺ))
        ( apᵈ-[]ᵀ* (ap-++ (sym (▹-[]ᵀˡ* γ*₀))) (symᵈ (⁺^*-▹ γ*₀)) ∙ᵈ
          var-⁺^→⁺^ᵀ₀
            ( ▹-[]ᵀˡ* γ*₀ ∙
              ap-▹ᵀˡ Ω-γ*₀₁ (var-⁺^→⁺^ᵗᵀ₀ Ω-γ*₀₁ aᴺ) ∙
              sym (▹-[]ᵀˡ* γ*₁))
            Bᴺ ∙ᵈ
          apᵈ-[]ᵀ* (ap-++ (▹-[]ᵀˡ* γ*₁)) (⁺^*-▹ γ*₁))
        (ap-++ Ω-γ*₀₁)
        (apᵈ-⟨⟩
          (ap-++ Ω-γ*₀₁)
          (var-⁺^→⁺^ᵗᵀ₀ Ω-γ*₀₁ aᴺ)
          (var-⁺^→⁺^ᵗ₀ Ω-γ*₀₁ aᴺ)) ∙ᵈ
      dep (sym (⟨⟩-[]ᵀ* (γ*₁ ⁺^*)))
    var-⁺^→⁺^ᵗᵀ₀ Ω-γ*₀₁ (lamᴺ Aᴺ _ bᴺ) =
      dep (Π-[]* (γ*₀ ⁺^*)) ∙ᵈ
      apᵈ-Π
        (ap-++ Ω-γ*₀₁)
        (var-⁺^→⁺^ᵀ₀ Ω-γ*₀₁ Aᴺ)
        ( apᵈ-[]ᵀ* (ap-++ (sym (▹-[]ᵀˡ* γ*₀))) (symᵈ (⁺^*-▹ γ*₀)) ∙ᵈ
          var-⁺^→⁺^ᵗᵀ₀
            ( ▹-[]ᵀˡ* γ*₀ ∙
              ap-▹ᵀˡ Ω-γ*₀₁ (var-⁺^→⁺^ᵀ₀ Ω-γ*₀₁ Aᴺ) ∙
              sym (▹-[]ᵀˡ* γ*₁))
            bᴺ ∙ᵈ
          apᵈ-[]ᵀ* (ap-++ (▹-[]ᵀˡ* γ*₁)) (⁺^*-▹ γ*₁)) ∙ᵈ
      dep (sym (Π-[]* (γ*₁ ⁺^*)))

    var-⁺^→⁺^ᵗ₀ Ω-γ*₀₁ (varᴺ x) = var-γ*₀₁-⁺^ Ω-γ*₀₁
    var-⁺^→⁺^ᵗ₀ Ω-γ*₀₁ (cᴺ Aᴺ) =
      c-[]* (γ*₀ ⁺^*) ∙ᵈ
      apᵈ-c (ap-++ Ω-γ*₀₁) (var-⁺^→⁺^ᵀ₀ Ω-γ*₀₁ Aᴺ) ∙ᵈ
      symᵈ (c-[]* (γ*₁ ⁺^*))

    var-⁺^→⁺^ᵗ₀ Ω-γ*₀₁ (appᴺ _ Bᴺ fᴺ aᴺ) =
      app-[]* (γ*₀ ⁺^*) ∙ᵈ
      apᵈ-app
        (ap-++ Ω-γ*₀₁)
        (var-⁺^→⁺^ᵗᵀ₀ Ω-γ*₀₁ aᴺ)
        ( apᵈ-[]ᵀ* (ap-++ (sym (▹-[]ᵀˡ* γ*₀))) (symᵈ (⁺^*-▹ γ*₀)) ∙ᵈ
          var-⁺^→⁺^ᵀ₀
            ( ▹-[]ᵀˡ* γ*₀ ∙
              ap-▹ᵀˡ Ω-γ*₀₁ (var-⁺^→⁺^ᵗᵀ₀ Ω-γ*₀₁ aᴺ) ∙
              sym (▹-[]ᵀˡ* γ*₁))
            Bᴺ ∙ᵈ
          apᵈ-[]ᵀ* (ap-++ (▹-[]ᵀˡ* γ*₁)) (⁺^*-▹ γ*₁))
        (splitlr (var-⁺^→⁺^ᵗ₀ Ω-γ*₀₁ fᴺ))
        (var-⁺^→⁺^ᵗ₀ Ω-γ*₀₁ aᴺ) ∙ᵈ
      symᵈ (app-[]* (γ*₁ ⁺^*))
    var-⁺^→⁺^ᵗ₀ Ω-γ*₀₁ (lamᴺ Aᴺ _ bᴺ) =
      lam-[]* (γ*₀ ⁺^*) ∙ᵈ
      apᵈ-lam
        (ap-++ Ω-γ*₀₁)
        (var-⁺^→⁺^ᵀ₀ Ω-γ*₀₁ Aᴺ)
        ( apᵈ-[]ᵀ* (ap-++ (sym (▹-[]ᵀˡ* γ*₀))) (symᵈ (⁺^*-▹ γ*₀)) ∙ᵈ
          var-⁺^→⁺^ᵗᵀ₀
            ( ▹-[]ᵀˡ* γ*₀ ∙
              ap-▹ᵀˡ Ω-γ*₀₁ (var-⁺^→⁺^ᵀ₀ Ω-γ*₀₁ Aᴺ) ∙
              sym (▹-[]ᵀˡ* γ*₁))
            bᴺ ∙ᵈ
          apᵈ-[]ᵀ* (ap-++ (▹-[]ᵀˡ* γ*₁)) (⁺^*-▹ γ*₁))
        ( apᵈ-[]ᵗ*₂ (ap-++ (sym (▹-[]ᵀˡ* γ*₀))) (symᵈ (⁺^*-▹ γ*₀)) ∙ᵈ
          var-⁺^→⁺^ᵗ₀
            ( ▹-[]ᵀˡ* γ*₀ ∙
              ap-▹ᵀˡ Ω-γ*₀₁ (var-⁺^→⁺^ᵀ₀ Ω-γ*₀₁ Aᴺ) ∙
              sym (▹-[]ᵀˡ* γ*₁))
            bᴺ ∙ᵈ
          apᵈ-[]ᵗ*₂ (ap-++ (▹-[]ᵀˡ* γ*₁)) (⁺^*-▹ γ*₁)) ∙ᵈ
      symᵈ (lam-[]* (γ*₁ ⁺^*))

  var-⁺^→[]ᵀˡ : Ω [ γ*₀ ]ᵀˡ* ≡ Ω [ γ*₁ ]ᵀˡ*
  var-⁺^→[]ᵀˡ {Ω = ◇} = ◇-[]ᵀˡ* γ*₀ ∙ sym (◇-[]ᵀˡ* γ*₁)
  var-⁺^→[]ᵀˡ {Ω = Ω ▹ A} =
    ▹-[]ᵀˡ* γ*₀ ∙
    ap-▹ᵀˡ var-⁺^→[]ᵀˡ (var-⁺^→⁺^ᵀ₀ var-⁺^→[]ᵀˡ (normᵀ A)) ∙
    sym (▹-[]ᵀˡ* γ*₁)

  var-⁺^→⁺^ᵀ : A [ γ*₀ ⁺^* ]ᵀ* ≡[ ap-Ty (ap-++ var-⁺^→[]ᵀˡ) ] A [ γ*₁ ⁺^* ]ᵀ*
  var-⁺^→⁺^ᵀ {A} = var-⁺^→⁺^ᵀ₀ var-⁺^→[]ᵀˡ (normᵀ A)

  var-⁺^→⁺^ᵗ :
    a [ γ*₀ ⁺^* ]ᵗ* ≡[ ap-Tm₂ (ap-++ var-⁺^→[]ᵀˡ) var-⁺^→⁺^ᵀ ] a [ γ*₁ ⁺^* ]ᵗ*
  var-⁺^→⁺^ᵗ {a} = var-⁺^→⁺^ᵗ₀ var-⁺^→[]ᵀˡ (normᵗ a)

_⁺^ʷ : Wk Δ Γ γ → Wk (Δ ++ Ω [ γ ]ᵀˡ) (Γ ++ Ω) (γ ⁺^)
_⁺^ʷ {Ω = ◇} γʷ = γʷ
_⁺^ʷ {Ω = Ω ▹ A} γʷ = γʷ ⁺^ʷ ⁺

module _ {A : Ty Γ i} (γʷ : Wk Δ Γ γ) where
  private
    var-p-⁺-⁺^ʷ₀ :
      (Ω-p-⁺ᵀˡ : Ω [ p ]ᵀˡ [ γ ⁺ ]ᵀˡ ≡ Ω [ γ ]ᵀˡ [ p ]ᵀˡ ∈ Tel (Δ ▹ A [ γ ]ᵀ)) →
      var x [ p ⁺^ ]ᵗ [ γ ⁺ ⁺^ ]ᵗ
        ≡[
          ap-Tm₂
            (ap-++ Ω-p-⁺ᵀˡ)
            ([]→⁺^ᵛᵀ (⌜ p ⌝ ∘ ⌜ γ ⁺ ⌝) (⌜ γ ⌝ ∘ ⌜ p ⌝) p-⁺ᵀ Ω-p-⁺ᵀˡ x) ]
      var x [ γ ⁺^ ]ᵗ [ p ⁺^ ]ᵗ
        ∈ Tm (Δ ▹ A [ γ ]ᵀ ++ Ω [ γ ]ᵀˡ [ p ]ᵀˡ) (B [ γ ⁺^ ]ᵀ [ p ⁺^ ]ᵀ)
    var-p-⁺-⁺^ʷ₀ {Ω = ◇} ◇-p-⁺ᵀˡ = dep (ap-[]ᵗ var-p) ∙ᵈ vs-⁺
    var-p-⁺-⁺^ʷ₀ {Ω = Ω ▹ B} {x = vz} Ω▹A-p-⁺ᵀˡ =
      apᵈ-[]ᵗ p-⁺ᵀ vz-⁺ ∙ᵈ
      vz-⁺ ∙ᵈ
      apᵈ-var
        (ap-++ Ω▹A-p-⁺ᵀˡ)
        (apᵈ-[]ᵀ
          (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-p-⁺ᵀˡ))
          (▹ᵀˡ-inj-A Ω▹A-p-⁺ᵀˡ)
          (ap-▹ (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-p-⁺ᵀˡ)) (▹ᵀˡ-inj-A Ω▹A-p-⁺ᵀˡ))
          (apᵈ-p (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-p-⁺ᵀˡ)) (▹ᵀˡ-inj-A Ω▹A-p-⁺ᵀˡ)))
        (apᵈ-vz (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-p-⁺ᵀˡ)) (▹ᵀˡ-inj-A Ω▹A-p-⁺ᵀˡ)) ∙ᵈ
      symᵈ vz-⁺ ∙ᵈ
      apᵈ-[]ᵗ (sym p-⁺ᵀ) (symᵈ vz-⁺)
    var-p-⁺-⁺^ʷ₀ {Ω = Ω ▹ B} {x = vs x} Ω▹A-p-⁺ᵀˡ =
      apᵈ-[]ᵗ p-⁺ᵀ (vs-⁺ ∙ᵈ dep (ap-[]ᵗ (var-[]ʷ (p ⁺^ʷ)) ∙ var-p)) ∙ᵈ
      vs-⁺ ∙ᵈ
      apᵈ-[]ᵗ₅
        (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-p-⁺ᵀˡ))
        ([]→⁺^ᵛᵀ (⌜ p ⌝ ∘ ⌜ γ ⁺ ⌝) (⌜ γ ⌝ ∘ ⌜ p ⌝) p-⁺ᵀ (▹ᵀˡ-inj-Ω Ω▹A-p-⁺ᵀˡ) x)
        ( dep (ap-[]ᵗ (sym (var-[]ʷ (p ⁺^ʷ)))) ∙ᵈ
          var-p-⁺-⁺^ʷ₀ (▹ᵀˡ-inj-Ω Ω▹A-p-⁺ᵀˡ) ∙ᵈ
          dep (ap-[]ᵗ (var-[]ʷ (γʷ ⁺^ʷ))))
        (ap-▹ (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-p-⁺ᵀˡ)) (▹ᵀˡ-inj-A Ω▹A-p-⁺ᵀˡ))
        (apᵈ-p (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-p-⁺ᵀˡ)) (▹ᵀˡ-inj-A Ω▹A-p-⁺ᵀˡ)) ∙ᵈ
      symᵈ vs-⁺ ∙ᵈ
      apᵈ-[]ᵗ
        (sym p-⁺ᵀ)
        (dep (sym var-p ∙ ap-[]ᵗ (sym (var-[]ʷ (γʷ ⁺^ʷ)))) ∙ᵈ symᵈ vs-⁺)

  open var-⁺^→⁺^ (⌜ p ⌝ ∘ ⌜ γ ⁺ ⌝) (⌜ γ ⌝ ∘ ⌜ p ⌝) p-⁺ᵀ var-p-⁺-⁺^ʷ₀ public
    renaming
      (var-⁺^→[]ᵀˡ to p-⁺ᵀˡʷ; var-⁺^→⁺^ᵀ to p-⁺ᵀ-⁺^ʷ; var-⁺^→⁺^ᵗ to p-⁺ᵗ-⁺^ʷ)

module _ {A : Ty Γ i} {γ : Sub Δ Γ} where
  private
    var-p-⁺-⁺^₀ :
      (Ω-p-⁺ᵀˡ : Ω [ p ]ᵀˡ [ γ ⁺ ]ᵀˡ ≡ Ω [ γ ]ᵀˡ [ p ]ᵀˡ ∈ Tel (Δ ▹ A [ γ ]ᵀ)) →
      var x [ p ⁺^ ]ᵗ [ γ ⁺ ⁺^ ]ᵗ
        ≡[
          ap-Tm₂
            (ap-++ Ω-p-⁺ᵀˡ)
            ([]→⁺^ᵛᵀ (⌜ p ⌝ ∘ ⌜ γ ⁺ ⌝) (⌜ γ ⌝ ∘ ⌜ p ⌝) p-⁺ᵀ Ω-p-⁺ᵀˡ x) ]
      var x [ γ ⁺^ ]ᵗ [ p ⁺^ ]ᵗ
        ∈ Tm (Δ ▹ A [ γ ]ᵀ ++ Ω [ γ ]ᵀˡ [ p ]ᵀˡ) (B [ γ ⁺^ ]ᵀ [ p ⁺^ ]ᵀ)
    var-p-⁺-⁺^₀ {Ω = ◇} ◇-p-⁺ᵀˡ = dep (ap-[]ᵗ var-p) ∙ᵈ vs-⁺
    var-p-⁺-⁺^₀ {Ω = Ω ▹ B} {x = vz} Ω▹A-p-⁺ᵀˡ =
      apᵈ-[]ᵗ p-⁺ᵀ vz-⁺ ∙ᵈ
      vz-⁺ ∙ᵈ
      apᵈ-var
        (ap-++ Ω▹A-p-⁺ᵀˡ)
        (apᵈ-[]ᵀ
          (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-p-⁺ᵀˡ))
          (▹ᵀˡ-inj-A Ω▹A-p-⁺ᵀˡ)
          (ap-▹ (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-p-⁺ᵀˡ)) (▹ᵀˡ-inj-A Ω▹A-p-⁺ᵀˡ))
          (apᵈ-p (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-p-⁺ᵀˡ)) (▹ᵀˡ-inj-A Ω▹A-p-⁺ᵀˡ)))
        (apᵈ-vz (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-p-⁺ᵀˡ)) (▹ᵀˡ-inj-A Ω▹A-p-⁺ᵀˡ)) ∙ᵈ
      symᵈ vz-⁺ ∙ᵈ
      apᵈ-[]ᵗ (sym p-⁺ᵀ) (symᵈ vz-⁺)
    var-p-⁺-⁺^₀ {Ω = Ω ▹ B} {x = vs x} Ω▹A-p-⁺ᵀˡ =
      apᵈ-[]ᵗ p-⁺ᵀ (vs-⁺ ∙ᵈ dep (ap-[]ᵗ (var-[]ʷ (p ⁺^ʷ)) ∙ var-p)) ∙ᵈ
      vs-⁺ ∙ᵈ
      apᵈ-[]ᵗ₅
        (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-p-⁺ᵀˡ))
        ([]→⁺^ᵛᵀ (⌜ p ⌝ ∘ ⌜ γ ⁺ ⌝) (⌜ γ ⌝ ∘ ⌜ p ⌝) p-⁺ᵀ (▹ᵀˡ-inj-Ω Ω▹A-p-⁺ᵀˡ) x)
        ( dep (ap-[]ᵗ (sym (var-[]ʷ (p ⁺^ʷ)))) ∙ᵈ
          var-p-⁺-⁺^₀ (▹ᵀˡ-inj-Ω Ω▹A-p-⁺ᵀˡ))
        (ap-▹ (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-p-⁺ᵀˡ)) (▹ᵀˡ-inj-A Ω▹A-p-⁺ᵀˡ))
        (apᵈ-p (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-p-⁺ᵀˡ)) (▹ᵀˡ-inj-A Ω▹A-p-⁺ᵀˡ)) ∙ᵈ
      symᵈ (p-⁺ᵗ-⁺^ʷ (p ⁺^ʷ)) ∙ᵈ
      apᵈ-[]ᵗ (sym p-⁺ᵀ) (symᵈ vs-⁺)

  open var-⁺^→⁺^ (⌜ p ⌝ ∘ ⌜ γ ⁺ ⌝) (⌜ γ ⌝ ∘ ⌜ p ⌝) p-⁺ᵀ var-p-⁺-⁺^₀ public
    renaming
      (var-⁺^→[]ᵀˡ to p-⁺ᵀˡ; var-⁺^→⁺^ᵀ to p-⁺ᵀ-⁺^; var-⁺^→⁺^ᵗ to p-⁺ᵗ-⁺^)

p-⁺ᵗ* :
  (γ* : Sub* Δ Γ) →
  b [ p ]ᵗ [ γ* ⁺* ]ᵗ* ≡[ ap-Tm (p-⁺ᵀ* γ*) ]
  b [ γ* ]ᵗ* [ p ]ᵗ ∈ Tm (Δ ▹ A [ γ* ]ᵀ*) (B [ γ* ]ᵀ* [ p ]ᵀ)
p-⁺ᵗ* ⌜ γ ⌝ = p-⁺ᵗ-⁺^
p-⁺ᵗ* (γ* ∘ δ*) = apᵈ-[]ᵗ* (p-⁺ᵀ* γ*) (p-⁺ᵗ* γ*) (δ* ⁺*) ∙ᵈ p-⁺ᵗ* δ*
p-⁺ᵗ* id = reflᵈ

module var-[]→⁺^
  (γ*₀ γ*₁ : Sub* Δ Γ)
  (γ*₀₁ᵀ : ∀ {i} {A : Ty Γ i} → A [ γ*₀ ]ᵀ* ≡ A [ γ*₁ ]ᵀ*)
  (var-γ*₀₁ :
    ∀ {i} {A : Ty Γ i} {x : Var Γ A} →
    var x [ γ*₀ ]ᵗ* ≡[ ap-Tm γ*₀₁ᵀ ] var x [ γ*₁ ]ᵗ*)
  where
  private
    var-[]→var-⁺^₀ :
      (Ω-γ*₀₁ : Ω [ γ*₀ ]ᵀˡ* ≡ Ω [ γ*₁ ]ᵀˡ*) →
      var x [ γ*₀ ⁺^* ]ᵗ*
        ≡[ ap-Tm₂ (ap-++ Ω-γ*₀₁) ([]→⁺^ᵛᵀ γ*₀ γ*₁ γ*₀₁ᵀ Ω-γ*₀₁ x) ]
      var x [ γ*₁ ⁺^* ]ᵗ*
    var-[]→var-⁺^₀ {Ω = ◇} ◇-γ*₀₁ =
      apᵈ-[]ᵗ*₂ (ap-++ (◇-[]ᵀˡ* γ*₀)) (⁺^*-◇ γ*₀) ∙ᵈ
      var-γ*₀₁ ∙ᵈ
      apᵈ-[]ᵗ*₂ (ap-++ (sym (◇-[]ᵀˡ* γ*₁))) (symᵈ (⁺^*-◇ γ*₁))
    var-[]→var-⁺^₀ {Ω = Ω ▹ A} {x = vz} Ω▹A-γ*₀₁ =
      apᵈ-[]ᵗ*₂ (ap-++ (▹-[]ᵀˡ* γ*₀)) (⁺^*-▹ γ*₀) ∙ᵈ
      vz-⁺* (γ*₀ ⁺^*) ∙ᵈ
      apᵈ-var
        (ap-▹ (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-γ*₀₁′)) (▹ᵀˡ-inj-A Ω▹A-γ*₀₁′))
        (apᵈ-[]ᵀ
          (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-γ*₀₁′))
          (▹ᵀˡ-inj-A Ω▹A-γ*₀₁′)
          (ap-▹ (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-γ*₀₁′)) (▹ᵀˡ-inj-A Ω▹A-γ*₀₁′))
          (apᵈ-p (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-γ*₀₁′)) (▹ᵀˡ-inj-A Ω▹A-γ*₀₁′)))
        (apᵈ-vz (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-γ*₀₁′)) (▹ᵀˡ-inj-A Ω▹A-γ*₀₁′)) ∙ᵈ
      symᵈ (vz-⁺* (γ*₁ ⁺^*)) ∙ᵈ
      apᵈ-[]ᵗ*₂ (ap-++ (sym (▹-[]ᵀˡ* γ*₁))) (symᵈ (⁺^*-▹ γ*₁))
      where
      Ω▹A-γ*₀₁′ :
        (Ω [ γ*₀ ]ᵀˡ* ▹ A [ γ*₀ ⁺^* ]ᵀ*) ≡ (Ω [ γ*₁ ]ᵀˡ* ▹ A [ γ*₁ ⁺^* ]ᵀ*)
      Ω▹A-γ*₀₁′ = sym (▹-[]ᵀˡ* γ*₀) ∙ Ω▹A-γ*₀₁ ∙ ▹-[]ᵀˡ* γ*₁
    var-[]→var-⁺^₀ {Ω = Ω ▹ A} {x = vs x} Ω▹A-γ*₀₁ =
      apᵈ-[]ᵗ*₃ (sym var-p) (ap-++ (▹-[]ᵀˡ* γ*₀)) (⁺^*-▹ γ*₀) ∙ᵈ
      p-⁺ᵗ* (γ*₀ ⁺^*) ∙ᵈ
      apᵈ-[]ᵗ₅
        (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-γ*₀₁′))
        ([]→⁺^ᵛᵀ γ*₀ γ*₁ γ*₀₁ᵀ (▹ᵀˡ-inj-Ω Ω▹A-γ*₀₁′) x)
        (var-[]→var-⁺^₀ (▹ᵀˡ-inj-Ω Ω▹A-γ*₀₁′))
        (ap-▹ (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-γ*₀₁′)) (▹ᵀˡ-inj-A Ω▹A-γ*₀₁′))
        (apᵈ-p (ap-++ (▹ᵀˡ-inj-Ω Ω▹A-γ*₀₁′)) (▹ᵀˡ-inj-A Ω▹A-γ*₀₁′)) ∙ᵈ
      symᵈ (p-⁺ᵗ* (γ*₁ ⁺^*)) ∙ᵈ
      apᵈ-[]ᵗ*₃ var-p (ap-++ (sym (▹-[]ᵀˡ* γ*₁))) (symᵈ (⁺^*-▹ γ*₁))
      where
      Ω▹A-γ*₀₁′ :
        (Ω [ γ*₀ ]ᵀˡ* ▹ A [ γ*₀ ⁺^* ]ᵀ*) ≡ (Ω [ γ*₁ ]ᵀˡ* ▹ A [ γ*₁ ⁺^* ]ᵀ*)
      Ω▹A-γ*₀₁′ = sym (▹-[]ᵀˡ* γ*₀) ∙ Ω▹A-γ*₀₁ ∙ ▹-[]ᵀˡ* γ*₁

  open var-⁺^→⁺^ γ*₀ γ*₁ γ*₀₁ᵀ var-[]→var-⁺^₀ public
    renaming
      ( var-⁺^→[]ᵀˡ to var-[]→[]ᵀˡ
      ; var-⁺^→⁺^ᵀ to var-[]→⁺^ᵀ
      ; var-⁺^→⁺^ᵗ to var-[]→⁺^ᵗ)

module _ {a : Tm Γ A} where
  open var-[]→⁺^ (⌜ p ⌝ ∘ ⌜ ⟨ a ⟩ ⌝) id p-⟨⟩ᵀ (dep (ap-[]ᵗ var-p) ∙ᵈ vs-⟨⟩)
    public
    renaming
      (var-[]→[]ᵀˡ to p-⟨⟩ᵀˡ; var-[]→⁺^ᵀ to p-⟨⟩ᵀ-⁺^; var-[]→⁺^ᵗ to p-⟨⟩ᵗ-⁺^)

module _ {a : Tm Γ A} {γ : Sub Δ Γ} where
  var-⟨⟩-[] :
    var x [ ⟨ a ⟩ ]ᵗ [ γ ]ᵗ ≡[ ap-Tm ⟨⟩-[]ᵀ ] var x [ γ ⁺ ]ᵗ [ ⟨ a [ γ ]ᵗ ⟩ ]ᵗ
  var-⟨⟩-[] {x = vz} =
    apᵈ-[]ᵗ p-⟨⟩ᵀ vz-⟨⟩ ∙ᵈ symᵈ vz-⟨⟩ ∙ᵈ apᵈ-[]ᵗ (sym p-⁺ᵀ) (symᵈ vz-⁺)
  var-⟨⟩-[] {x = vs x} =
    apᵈ-[]ᵗ p-⟨⟩ᵀ vs-⟨⟩ ∙ᵈ symᵈ p-⟨⟩ᵗ-⁺^ ∙ᵈ apᵈ-[]ᵗ (sym p-⁺ᵀ) (symᵈ vs-⁺)

  open var-[]→⁺^
    (⌜ ⟨ a ⟩ ⌝ ∘ ⌜ γ ⌝) (⌜ γ ⁺ ⌝ ∘ ⌜ ⟨ a [ γ ]ᵗ ⟩ ⌝) ⟨⟩-[]ᵀ var-⟨⟩-[]
    public
    renaming
      (var-[]→[]ᵀˡ to ⟨⟩-[]ᵀˡ; var-[]→⁺^ᵀ to ⟨⟩-[]ᵀ-⁺^; var-[]→⁺^ᵗ to ⟨⟩-[]ᵗ-⁺^)

module _ {A : Ty Γ i} where
  var-▹-η :
    {x : Var (Γ ▹ A) B} → var x ≡[ ap-Tm ▹-ηᵀ ] var x [ p ⁺ ]ᵗ [ ⟨ var vz ⟩ ]ᵗ
  var-▹-η {x = vz} = symᵈ vz-⟨⟩ ∙ᵈ apᵈ-[]ᵗ (sym p-⁺ᵀ) (symᵈ vz-⁺)
  var-▹-η {x = vs x} =
    dep (sym var-p) ∙ᵈ symᵈ p-⟨⟩ᵗ-⁺^ ∙ᵈ apᵈ-[]ᵗ (sym p-⁺ᵀ) (symᵈ vs-⁺)

  open var-[]→⁺^ id (⌜ p ⁺ ⌝ ∘ ⌜ ⟨ var vz ⟩ ⌝) ▹-ηᵀ var-▹-η public
    renaming
      (var-[]→[]ᵀˡ to ▹-ηᵀˡ; var-[]→⁺^ᵀ to ▹-ηᵀ-⁺^; var-[]→⁺^ᵗ to ▹-ηᵗ-⁺^)

-- -} -- -} -- -} -- -} -- -} -- -} -- -} -- -} -- -} -- -} -- -} -- -}
