We thank the reviewers for their constructive criticism.

----------------------------------------------------------
Response to Reviewer 1
----------------------------------------------------------

> 2. In various places you speak of "equivalent" systems, but it is
> not always clear to me what you mean by that. E.g. line 93 [...]

Sorry, we were too sloppy: in line 93, we should have said contextual
CwFs are equivalent to B-systems, and the same in lines 149-150.

> 13. line 568-569. The sentence starting "as most sorts..." is a bit
> obscure to me: in Section 2 you speak of a sort of types and one of
> terms, etc.

We should have said that most sorts in the new model are given by
specific term-sorts in the old model.

----------------------------------------------------------
Response to Reviewer 2
----------------------------------------------------------

> - Problem 11: What is a contextual isomorphism? Why are `F_Con` and
> `F_Sub` not required to be invertible?

A contextual isomorphism is an isomorphism between the contextual
cores of the two models (that is, when context and substitutions are
inductively generated from types and terms). In a model of type
theory, the important structure is carried by types and terms, and
contexts/substitutions are only there as scaffolding. This is why the
notion of contextual isomorphism makes sense: it ignores the possible
differences between contexts/substitutions.

> As mentioned in the summary above, the claim that for type theory
> with Π-types, Σ-types and a universe hierarchy, the theory of CwFs
> is "weakly equivalent" to the SSC, is not well-defined and not fully
> substantiated.

We agree. As we mention in line 618--619, types and terms are
isomorphic after the other round-trip, but because of the limitations
of the single substitution calculus, it is not clear how to define
contextual cores. In the abstract and introduction, we will say that a
CwF structure can be defined on an SSC with Σ,Π,U.

> ## Minor comments
> 
> - Somewhat important in my opinion: a theorem environment labelled
> "Problem" gives the impression of an *open* problem.

We used Vladimir Voevodsky's convention from his paper "A C-system
defined by a universe in a category" where problem/construction refers
to a proof relevant theorem/proof pair. When a construction is a
theorem, it means that it has at most one proof. We will clarify.

> - The word "instantiation" is used often but not really introduced;

A substitution is a list of terms. We use instantiation for the action
of a substitution.

> - ln 456: "It is important ...": [...] since αβη-equality is encoded
> as metatheoretic equality, any predicate will preserve the
> conversion rules.

It is true that any predicate preserves αβη-equality, but we cannot
define a map into a non-truncated version of α-normal forms, because
that would expose differences between βη-equal terms. This is the
reason for truncation.

> - ln 568-569: Do you mean "most sort inhabitants"?

See answer to reviewer 1.

> 1. A lot of the presented material is formalized in Agda. A
> recurring theme is admissibility vs. derivability.

We directly encode admissible equations as "provable in the syntax
(initial model)" and derivability as provable in any model. Similarly
for admissible operations/sorts. One can say that in Agda, pattern
matching corresponds to admissibility, and adding a definition to a
record corresponds to derivability. We don't use pattern matching
because we simply postulate initial models and their eliminators.

> 2. To what extent can the central result in the paper (problem 6) be
> factored through the following result/conjecture: For any CwF, the
> category of parallel substitutions is exactly presented by the graph
> of single-variable weakenings and substitutions, subject to the
> equations in def. 1 / def. 7 (expressed not as equations on
> type/term actions but as equations on morphisms in the free category
> over that graph).

We believe that the reviewer's conjecture does not hold: if we take
the single weakenings and substitutions from a CwF, then we generate
the free category and quotient by the morphism-versions of the
equations in def.1/7, then e.g. p⁺∘⟨t⟩⁺ = id holds in the CwF, but not
in the new category. If we add all lifted versions of our equations
(Sec.3) in the theory, then it should work.

----------------------------------------------------------
Response to Reviewer 3
----------------------------------------------------------

We also don't see a direct application of the SSC technique, but we
think that such a surprisingly concise and previously unknown
definition of type theory deserves publication. Also, the phenomenon
that for certain theories, the syntaxes are equivalent but not the
models (e.g. lambda calculus and SK-combinator calculus), is
interesting and here we work out another example. Our calculus is a
"minimisation" of type theory -- it might be the first step in the
direction of a completely minimal calculus where there is only one
proof for each equation, and thus coherent (this is so far science
fiction).
