** Termification
Deriving a parallel model from the SSC model via termification. We
start with the SSC model M, it has Π,U,Lift,⊤,Σ.

Lift^k : Ty Γ i → Ty Γ (k+i)
Lift^0     A := A
Lift^(1+k) A := Lift(Lift^k A)

un^k : Tm Γ (Lift^k A) ≅ Tm Γ A : mk^k

app : Tm Γ (Π A B) → Tm (Γ▹A) B
app t := t[p]·q

Con := (i:ℕ) × M.Ty ◇ i
- we will overload contexts as both elements of ℕ and M.Tys for
  readability
Sub Δ Γ := M.Tm ◇ (Lift^(Γ-Δ) Δ ⇒ Lift^(Δ-Γ) Γ)
γ∘δ := lam(mk^(Θ-Γ) (un^(Δ-Γ) (γ[p]·mk^(Γ-Δ) (un^(Θ-Δ) (δ[p]·mk^(Δ-Θ) (un^(Γ-Θ) q))))))
- ?   : M.Tm (◇ ▹ Lift^(Γ-Θ) Θ) (Lift^(Θ-Γ) Γ[p])
  δ   : M.Tm ◇ (Lift^(Δ-Θ) Θ ⇒ Lift^(Θ-Δ) Δ)
  γ   : M.Tm ◇ (Lift^(Γ-Δ) Δ ⇒ Lift^(Δ-Γ) Γ)
  γ∘δ : M.Tm ◇ (Lift^(Γ-Θ) Θ ⇒ Lift^(Θ-Γ) Γ)
id  := lam q
- ass : (γ∘δ)∘θ = γ∘(δ∘θ)
  γ   : Sub Δ Γ
  δ   : Sub Θ Δ
  θ   : Sub Ξ Θ
  γ∘δ : Sub Θ Γ
  δ∘θ : Sub Ξ Δ
  δ∘θ = lam(mk^(Ξ-Δ) (un^(Θ-Δ) (δ[p]·mk^(Δ-Θ) (un^(Ξ-Θ) (θ[p]·mk^(Θ-Ξ) (un^(Δ-Ξ) q))))))
  (γ∘δ)∘θ =
  lam(mk^(Ξ-Γ) (un^(Θ-Γ) ((γ∘δ)[p]·mk^(Γ-Θ) (un^(Ξ-Θ) (θ[p]·mk^(Θ-Ξ) (un^(Γ-Ξ) q)))))) =
  lam(mk^(Ξ-Γ) (un^(Θ-Γ) (lam(mk^(Θ-Γ) (un^(Δ-Γ) (γ[p]·mk^(Γ-Δ) (un^(Θ-Δ) (δ[p]·mk^(Δ-Θ) (un^(Γ-Θ) q))))))[p]·mk^(Γ-Θ) (un^(Ξ-Θ) (θ[p]·mk^(Θ-Ξ) (un^(Γ-Ξ) q)))))) =(lam[])
  lam(mk^(Ξ-Γ) (un^(Θ-Γ) (lam(mk^(Θ-Γ) (un^(Δ-Γ) (γ[p][p⁺]·mk^(Γ-Δ) (un^(Θ-Δ) (δ[p][p⁺]·mk^(Δ-Θ) (un^(Γ-Θ) q))))))·mk^(Γ-Θ) (un^(Ξ-Θ) (θ[p]·mk^(Θ-Ξ) (un^(Γ-Ξ) q)))))) =(Πβ)
  lam(mk^(Ξ-Γ) (un^(Θ-Γ) (mk^(Θ-Γ) (un^(Δ-Γ) (γ[p]·mk^(Γ-Δ) (un^(Θ-Δ) (δ[p]·mk^(Δ-Θ) (un^(Γ-Θ) (mk^(Γ-Θ) (un^(Ξ-Θ) (θ[p]·mk^(Θ-Ξ) (un^(Γ-Ξ) q)))))))))))) =(Liftβ, Liftβ)
  lam(mk^(Ξ-Γ) (un^(Δ-Γ) (γ[p]·mk^(Γ-Δ) (un^(Θ-Δ) (δ[p]·mk^(Δ-Θ) (un^(Ξ-Θ) (θ[p]·mk^(Θ-Ξ) (un^(Γ-Ξ) q)))))))) =(Liftβ,Liftβ)
  lam(mk^(Ξ-Γ) (un^(Δ-Γ) (γ[p]·mk^(Γ-Δ) (un^(Ξ-Δ) (mk^(Ξ-Δ) (un^(Θ-Δ) (δ[p]·mk^(Δ-Θ) (un^(Ξ-Θ) (θ[p]·mk^(Θ-Ξ) (un^(Δ-Ξ) (mk^(Δ-Ξ) (un^(Γ-Ξ) q)))))))))))) =(Πβ)
  lam(mk^(Ξ-Γ) (un^(Δ-Γ) (γ[p]·mk^(Γ-Δ) (un^(Ξ-Δ) ((lam(mk^(Ξ-Δ) (un^(Θ-Δ) (δ[p][p⁺]·mk^(Δ-Θ) (un^(Ξ-Θ) (θ[p][p⁺]·mk^(Θ-Ξ) (un^(Δ-Ξ) q)))))))·mk^(Δ-Ξ) (un^(Γ-Ξ) q)))))) =(lam[])
  lam(mk^(Ξ-Γ) (un^(Δ-Γ) (γ[p]·mk^(Γ-Δ) (un^(Ξ-Δ) ((lam(mk^(Ξ-Δ) (un^(Θ-Δ) (δ[p]·mk^(Δ-Θ) (un^(Ξ-Θ) (θ[p]·mk^(Θ-Ξ) (un^(Δ-Ξ) q)))))))[p]·mk^(Δ-Ξ) (un^(Γ-Ξ) q)))))) =
  lam(mk^(Ξ-Γ) (un^(Δ-Γ) (γ[p]·mk^(Γ-Δ) (un^(Ξ-Δ) ((δ∘θ)[p]·mk^(Δ-Ξ) (un^(Γ-Ξ) q)))))) =
  γ∘(δ∘θ)
- idl : id∘γ = γ
  id∘γ =
  lam(mk^(Δ-Γ) (un^(Γ-Γ) (lam q[p]·mk^(Γ-Γ) (un^(Δ-Γ) (γ[p]·mk^(Γ-Δ) (un^(Γ-Δ) q)))))) =
  lam(mk^(Δ-Γ) (lam q[p]·(un^(Δ-Γ) (γ[p]·mk^(Γ-Δ) (un^(Γ-Δ) q))))) =(Liftη)
  lam(mk^(Δ-Γ) (lam q[p]·un^(Δ-Γ) (γ[p]·q))) =(lam[])
  lam(mk^(Δ-Γ) (lam q·un^(Δ-Γ) (γ[p]·q))) =(Πβ)
  lam(mk^(Δ-Γ) (un^(Δ-Γ) (γ[p]·q))) =(Liftη)
  lam(γ[p]·q) =(Πη)
  γ
- idr : γ∘id = γ
  γ∘id =
  lam(mk^(Δ-Γ) (un^(Δ-Γ) (γ[p]·mk^(Γ-Δ) (un^(Δ-Δ) (id[p]·mk^(Δ-Δ) (un^(Γ-Δ) q)))))) =
  lam(mk^(Δ-Γ) (un^(Δ-Γ) (γ[p]·mk^(Γ-Δ) (lam q[p]·un^(Γ-Δ) q)))) =(Liftη)
  lam(γ[p]·mk^(Γ-Δ) (lam q[p]·un^(Γ-Δ) q)) =(lam[])
  lam(γ[p]·mk^(Γ-Δ) (lam q·un^(Γ-Δ) q)) =(Πβ)
  lam(γ[p]·mk^(Γ-Δ) (un^(Γ-Δ) q)) =(Liftη)
  lam(γ[p]·q) =(Πη)
  γ
◇ := (0,⊤)
ε := lam (mk^Γ tt)
- ε : M.Tm ◇ (Γ ⇒ Lift^Γ ⊤)
- ◇η : σ = ε
  σ =(Πη)
  lam(σ[p]·q) =
  lam(σ[p]·q) =(Liftη)
  lam(mk^Γ (un^Γ (σ[p]·q))) =(⊤η)
  lam (mk^Γ tt) = 
  ε
Ty Γ i := Sub Γ (1+i,U i)
- Ty Γ i = M.Tm ◇ (Lift^(1+i-Γ) Γ ⇒ Lift^(Γ-(1+i)) (U i))
A[γ] := A∘γ
- [∘] : A[γ∘δ] = A∘(γ∘δ) = (A∘γ)∘δ = A[γ][δ]
- [id] : A[id] = A∘id = A
Tm Γ {i} A := M.Tm ◇ (Π (Lift^(i-Γ) Γ) (Lift^(Γ-i) (El(un^(Γ-(1+i)) (A[p]·mk^(1+i-Γ) (un^(i-Γ) q))))))
- A : M.Tm ◇ (Lift^(1+i-Γ) Γ ⇒ Lift^(Γ-(1+i)) (U i))
  A[p] : M.Tm (◇ ▹ Lift^(i-Γ) Γ) (Lift^(1+i-Γ) Γ ⇒ Lift^(Γ-(1+i)) (U i)[p])
Γ▹A := Σ (Lift^(i-Γ) Γ) (Lift^(Γ-i) (El(un^(Γ-(1+i)) (A[p]·mk^(1+i-Γ) (un^(i-Γ) q)))))
- Γ : M.Ty ◇ Γ
  A : M.Tm ◇ (Lift^(1+i-Γ) Γ ⇒ Lift^(Γ-(1+i)) (U i))

The above without universe stuff:
Con     := M.Ty ◇
Sub Δ Γ := M.Tm ◇ (Δ ⇒ Γ)
γ∘δ     := lam (γ[p]·(δ[p]·q))
id      := lam q
◇       := ⊤
ε       := lam tt
Ty Γ    := Sub Γ U = M.Tm ◇ (Γ ⇒ U)
A[γ]    := lam (A[p]·(γ[p]·q))
- A[γ][p]·q = A[p]·(γ[p]·q)
  A[γ][p]·q = 
  lam (A[p]·(γ[p]·q))[p]·q =(lam[])
  lam (A[p][p⁺]·(γ[p][p⁺]·q))·q =(Πβ)
  A[p]·(γ[p]·q)
Tm Γ A  := M.Tm ◇ (Π Γ (El(A[p]·q)))
Γ▹A     := Σ Γ (El(A[p]·q))
a[γ]    := lam (a[p]·(γ[p]·q))
- [∘] : a[γ∘δ] = a[γ][δ]
  a[γ∘δ] =
  lam (a[p]·((lam (γ[p]·(δ[p]·q)))[p]·q)) =(lam[])
  lam (a[p]·(lam (γ[p][p⁺]·(δ[p][p⁺]·q))·q)) =(Πβ)
  lam (a[p]·(γ[p]·(δ[p]·q))) =(Πβ)
  lam ((lam (a[p][p⁺]·(γ[p][p⁺]·q)))·(δ[p]·q)) =(lam[])
  lam ((lam (a[p]·(γ[p]·q)))[p]·(δ[p]·q)) =
  a[γ][δ]
- [id] : a[id] = a
  a[id] =
  lam (a[p]·(lam q[p]·q)) =(lam[])
  lam (a[p]·(lam q·q)) =(Πβ)
  lam (a[p]·q) =(Πη)
  a
γ,a     := lam(γ[p]·q,a[p]·q)
p       := lam(fst q)
q       := lam(snd q)
- Sub Δ (Γ▹A) ≅ (γ:Sub Δ Γ) × Tm Δ (A[γ])
  Sub Δ (Γ▹A) =
  M.Tm ◇ (Δ ⇒ Σ Γ (El(A[p]·q))) ≅(Π univ.prop)
  M.Tm (◇ ▹ Δ) (Σ Γ (El(A[p]·q))[p]) ≅(Σ univ.prop)
  (γ:M.Tm (◇▹Δ) (Γ[p])) × M.Tm (◇▹Δ) ((El(A[p]·q))[p⁺][⟨γ⟩]) =
  (γ:M.Tm (◇▹Δ) (Γ[p])) × M.Tm (◇▹Δ) ((El(A[p][p⁺][⟨γ⟩]·γ))) =
  (γ:M.Tm (◇▹Δ) (Γ[p])) × M.Tm (◇▹Δ) ((El(A[p][p][⟨γ⟩]·γ))) =
  (γ:M.Tm (◇▹Δ) (Γ[p])) × M.Tm (◇▹Δ) ((El(A[p]·γ))) ≅(Π univ.prop)
  (γ:M.Tm ◇ (Δ ⇒ Γ)) × M.Tm ◇ (Π Δ (El(A[p]·(γ[p]·q)))) =
  (γ:M.Tm ◇ (Δ ⇒ Γ)) × M.Tm ◇ (Π Δ (El(lam(A[p][p⁺]·(γ[p][p⁺]·q))·q))) =
  (γ:M.Tm ◇ (Δ ⇒ Γ)) × M.Tm ◇ (Π Δ (El(lam(A[p]·(γ[p]·q))[p]·q))) =
  (γ:M.Tm ◇ (Δ ⇒ Γ)) × M.Tm ◇ (Π Δ (El(A[γ][p]·q))) =
  (γ:Sub Δ Γ) × Tm Δ (A[γ])
- (γ,a)∘δ = (γ∘δ,a[γ])
  (γ,a)∘δ =
  lam((lam(γ[p]·q,a[p]·q))[p]·(δ[p]·q)) =(lam[])
  lam((lam(γ[p][p⁺]·q,a[p][p⁺]·q))·(δ[p]·q)) =(Πβ)
  lam(γ[p]·(δ[p]·q),a[p]·(γ[p]·q)) =(lam[],Πβ)
  lam((lam(γ[p]·(δ[p]·q)))[p]·q,(lam (a[p]·(γ[p]·q)))[p]·q) =
  lam((γ∘δ)[p]·q,a[γ][p]·q) =
  (γ∘δ,a[γ])
- (γ∘p,q) = lam(γ[p]·fst q,snd q)
  lam(lam (γ[p]·(lam(fst q)[p]·q))[p]·q,lam(snd q)[p]·q) =(lam[])
  lam(lam (γ[p]·(lam(fst q[p⁺])·q))[p]·q,lam(snd q[p⁺])·q) =
  lam(lam (γ[p]·(lam(fst q)·q))[p]·q,lam(snd q)·q) =(Πβ)
  lam(lam (γ[p]·fst q)[p]·q,snd q) =(lam[])
  lam(lam (γ[p][p⁺]·fst q)·q,snd q) =(Πβ)
  lam(γ[p][p⁺][⟨q⟩]·fst q,snd q) =([p⁺][⟨q⟩])
  lam(γ[p]·fst q,snd q)
Π A B   := lam (c (Π (El (A[p]·q)) (El (B[p][p]·(q[p],q)))))
- ?          : M.Tm ◇ (Γ ⇒ U)
  A          : M.Tm ◇ (Γ ⇒ U)
  B          : M.Tm ◇ (Σ Γ (El(A[p]·q)) ⇒ U)
  A[p]·q     : M.Tm (◇▹Γ) U
  B·(q[p],q) : M.Tm (◇▹Γ▹El(A[p]·q)) U
  q[p]       : M.Tm (◇▹Γ▹El(A[p]·q)) (Γ[p][p])
  q          : M.Tm (◇▹Γ▹El(A[p]·q)) (El(A[p]·q)[p])
  q          : M.Tm (◇▹Γ▹El(A[p]·q)) (El(A[p][p]·(q[p])))
  q          : M.Tm (◇▹Γ▹El(A[p]·q)) (El(A[p][p][p][⟨q[p]⟩]·(q[p])))
  q          : M.Tm (◇▹Γ▹El(A[p]·q)) (El(A[p][p][p]·q)[⟨q[p]⟩])
  (q[p],q)   : M.Tm (◇▹Γ▹El(A[p]·q)) (Σ Γ (El(A[p]·q))[p][p])
  (q[p],q)   : M.Tm (◇▹Γ▹El(A[p]·q)) (Σ (Γ[p][p]) (El(A[p][p⁺][p⁺]·q)))
  (q[p],q)   : M.Tm (◇▹Γ▹El(A[p]·q)) (Σ (Γ[p][p]) (El(A[p][p][p]·q)))
  B[p][p]    : M.Tm (◇▹Γ▹El(A[p]·q)) (Σ Γ (El(A[p]·q))[p][p] ⇒ U)
- Π[] : (Π A B)[γ] = Π (A[γ]) (B[γ∘p,q])
  (Π A B)[γ] =
  lam (lam (c (Π (El (A[p]·q)) (El (B[p][p]·(q[p],q)))))[p]·(γ[p]·q)) =(lam[])
  lam (lam (c (Π (El (A[p][p⁺]·q)) (El (B[p][p][p⁺⁺]·(q[p][p⁺⁺],q)))))·(γ[p]·q)) =(Πβ)
  lam (c (Π (El (A[p][p⁺][⟨γ[p]·q⟩]·(γ[p]·q))) (El (B[p][p][p⁺⁺][⟨γ[p]·q⟩⁺]·(q[p][p⁺⁺][⟨γ[p]·q⟩⁺],q))))) =([p][⁺])
  lam (c (Π (El (A[p][p][⟨γ[p]·q⟩]·(γ[p]·q))) (El (B[p][p⁺][p][⟨γ[p]·q⟩⁺]·(q[p⁺][p][⟨γ[p]·q⟩⁺],q))))) =([p][⟨⟩])
  lam (c (Π (El (A[p]·(γ[p]·q))) (El (B[p][p⁺][p][⟨γ[p]·q⟩⁺]·(q[p⁺][p][⟨γ[p]·q⟩⁺],q))))) =([p][⁺])
  lam (c (Π (El (A[p]·(γ[p]·q))) (El (B[p][p][⟨γ[p]·q⟩][p]·(q[p⁺][⟨γ[p]·q⟩][p],q))))) =([p][⟨⟩])
  lam (c (Π (El (A[p]·(γ[p]·q))) (El (B[p][p]·(q[p⁺][⟨γ[p]·q⟩][p],q))))) =(q[⁺])
  lam (c (Π (El (A[p]·(γ[p]·q))) (El (B[p][p]·(q[⟨γ[p]·q⟩][p],q))))) =(q[⟨⟩])
  lam (c (Π (El (A[p]·(γ[p]·q))) (El (B[p][p]·((γ[p]·q)[p],q))))) =(·[])
  lam (c (Π (El (A[p]·(γ[p]·q))) (El (B[p][p]·(γ[p][p]·(q[p]),q))))) =(Σβ)
  lam (c (Π (El (A[p]·(γ[p]·q))) (El (B[p][p]·(γ[p][p]·fst (q[p],q),snd (q[p],q)))))) =([p][⟨⟩])
  lam (c (Π (El (A[p]·(γ[p]·q))) (El (B[p][p]·(γ[p][p][p][⟨q[p],q⟩]·fst (q[p],q),snd (q[p],q)))))) =(Πβ)
  lam (c (Π (El (A[p]·(γ[p]·q))) (El (B[p][p]·(lam(γ[p][p][p]·fst q,snd q)·(q[p],q)))))) =([p][⁺])
  lam (c (Π (El (A[p]·(γ[p]·q))) (El (B[p][p]·(lam(γ[p][p⁺][p⁺]·fst q,snd q)·(q[p],q)))))) =(lam[])
  lam (c (Π (El (A[p]·(γ[p]·q))) (El (B[p][p]·(lam(γ[p]·fst q,snd q)[p][p]·(q[p],q)))))) =([p][⟨⟩])
  lam (c (Π (El (A[p]·(γ[p]·q))) (El (B[p][p][p][⟨q[p],q⟩]·(lam(γ[p]·fst q,snd q)[p][p][p][⟨q[p],q⟩]·(q[p],q)))))) =([p][⁺])
  lam (c (Π (El (A[p]·(γ[p]·q))) (El (B[p][p⁺][p⁺][⟨q[p],q⟩]·(lam(γ[p]·fst q,snd q)[p][p⁺][p⁺][⟨q[p],q⟩]·(q[p],q)))))) =(Πβ)
  lam (c (Π (El (lam (A[p][p⁺]·(γ[p][p⁺]·q))·q)) (El (lam (B[p][p⁺][p⁺]·(lam(γ[p]·fst q,snd q)[p][p⁺][p⁺]·q))·(q[p],q))))) =
  Π (A[γ]) (B[γ∘p,q])
lam b   := lam (lam (b[p][p]·(q[p],q)))
- b : M.Tm ◇ (Π (Σ Γ (El(A[p]·q))) (El(B[p]·q)))
  ? : M.Tm ◇ (Π Γ (El(lam (c (Π (El (A[p]·q)) (El (B[p][p]·(q[p],q)))))[p]·q)))
  ? : M.Tm ◇ (Π Γ (El(lam (c (Π (El (A[p][p⁺]·q)) (El (B[p][p][p⁺⁺]·(q[p][p⁺⁺],q)))))·q)))
  ? : M.Tm ◇ (Π Γ (El(lam (c (Π (El (A[p][p]·q)) (El (B[p][p⁺][p]·(q[p⁺][p],q)))))·q)))
  ? : M.Tm ◇ (Π Γ (El(lam (c (Π (El (A[p][p]·q)) (El (B[p][p][p]·(q[p],q)))))·q)))
  ? : M.Tm ◇ (Π Γ (El(c (Π (El (A[p][p][⟨q⟩]·q)) (El (B[p][p][p][⟨q⟩⁺]·(q[p][⟨q⟩⁺],q)))))))
  ? : M.Tm ◇ (Π Γ (El(c (Π (El (A[p]·q)) (El (B[p][p][⟨q⟩][p]·(q[⟨q⟩][p],q)))))))
  ? : M.Tm ◇ (Π Γ (El(c (Π (El (A[p]·q)) (El (B[p][p]·(q[p],q)))))))
and so on.
  
** Termification roundtrips: M:CwF, U M:SSC, T(U M):CwF, we show that for M' := T(U M), M' ≃ M.
Our notion of equivalence: a weak CwF-morphism which is bijective on types and terms

F : M'.Con → M.Con
F : M'.Sub Δ Γ → M.Sub (F Δ) (F Γ)
F : M'.Ty Γ ≅ M.Ty (F Γ)
F : M'.Tm Γ A ≅ M.Tm (F Γ) (F A)

F (γ∘δ) = F γ∘F δ
F id = id
F◇⁻¹ : Sub ◇ (F ◇)
F◇⁻¹ ∘ ε = id
F (A[γ]) = F A[F γ]
F (a[γ]) = F a[F γ]
F▹⁻¹ : Sub (F Γ▹F A) (F(Γ▹A))
F▹⁻¹ ∘ (F p,F q) = id
(F p,F q) ∘ F▹⁻¹ = id

why we don't need preservation of type formers which are defined by
universal property:

M'.Tm Γ (Π A B) ≅(univ.prop of Π in M') M'.Tm (Γ▹A) B ≅(preservation of Cwf structure by F) M.Tm (F Γ ▹ F A) (F B[...]) ≅(univ.prop of Π in M) M.Tm (Π (F A) (F B[...]))

Actions on the sorts:

F : M'.Con → M.Con
F : Ty ◇ → Con
F Γ := ◇▹Γ

F : M'.Sub Δ Γ → M.Sub (F Δ) (F Γ)
F : Tm ◇ (Δ ⇒ Γ) → Sub (◇▹Δ) (◇▹Γ)
F γ := (p,γ[p]·q)

F : M'.Ty Γ = Tm ◇ (Γ ⇒ U) ≅ Tm (◇▹Γ) U ≅ Ty (◇▹Γ) = M.Ty (F Γ)
F A := El(A[p]·q)

F : M'.Tm Γ A = Tm ◇ (Π Γ (El(A[p]·q))) ≅ Tm (◇▹Γ) (El(A[p]·q)) = M.Tm (F Γ) (F A)
F a := a[p]·q

preservation of CwF structure:

- F (γ∘δ) = F γ∘F δ
  F (γ∘δ) =
  F (lam (γ[p]·(δ[p]·q))) =
  (ε,(lam (γ[p]·(δ[p]·q)))[p]·q) =(lam[])
  (ε,(lam (γ[p][p⁺]·(δ[p][p⁺]·q)))·q) =(Πβ)
  (ε,γ[p]·(δ[p]·q)) =
  (ε,γ[p]·q)∘(ε,δ[p]·q) =
  F γ∘F δ
- F id = id
  F id =
  F (lam q) =
  (ε,lam q[p]·q) =
  (ε,q) =
  id
F◇⁻¹ : Sub ◇ (F ◇)
F◇⁻¹ : Sub ◇ (◇▹⊤)
F◇⁻¹ := (id,tt)
- F◇⁻¹ ∘ ε = id
  F◇⁻¹ ∘ ε =
  (id,tt) ∘ ε =
  (ε,tt) =(⊤η)
  id
- F (A[γ]) = F A[F γ]
  F (A[γ]) =
  F (lam (A[p]·(γ[p]·q))) =
  El(lam (A[p]·(γ[p]·q))[p]·q) =
  El(A[p]·(γ[p]·q)) =
  El(A[p]·q)[(p,γ[p]·q)] =
  F A[F γ]
- F (a[γ]) = F a[F γ]
  F (a[γ]) =
  F (lam (a[p]·(γ[p]·q))) =
  lam (a[p]·(γ[p]·q))[p]·q =
  a[p]·(γ[p]·q) =
  a[p]·q[p,γ[p]·q] =
  F a[F γ]
F▹⁻¹ : Sub (F Γ▹F A) (F(Γ▹A))
F▹⁻¹ : Sub (◇▹Γ▹El(A[p]·q)) (◇▹Σ Γ (El(A[p]·q)))
F▹⁻¹ := (p∘p,(q[p],q))
- F▹⁻¹ ∘ (F p,F q) = id
  F▹⁻¹ ∘ (F p,F q) =
  (p∘p,(q[p],q)) ∘ ((p,lam(fst q)[p]·q),lam(snd q)[p]·q) =(lam[],Πβ)
  (p∘p,(q[p],q)) ∘ (p,fst q,snd q) =
  (p,(fst q,snd q)) =(Ση)
  (p,q) =
  id
- (F p,F q) ∘ F▹⁻¹ = id
  (F p,F q) ∘ F▹⁻¹ =
  ((p,lam(fst q)[p]·q),lam(snd q)[p]·q) ∘ (p∘p,(q[p],q)) =
  (p,fst q,snd q) ∘ (p∘p,(q[p],q)) =
  (p∘p,q[p],q) =
  id

What about the other direction? If we start with a SSC, turn it into a CwF and turn it back into an SSC. do we get equivalent stuff?

M:SSC, T M:CwF, U(T M):SSC, M' := U(T M)

F : M'.Con → M.Con
F : M'.Sub Δ Γ → M.Sub (F Δ) (F Γ)       <- we cannot define this
F : M'.Ty Γ ≅ M.Ty (F Γ)
F : M'.Tm Γ A ≅ M.Tm (F Γ) (F A)

F : M'.Con → M.Con
F : Ty ◇ → Con
F Γ := (◇▹Γ)

F : M'.Sub Δ Γ → M.Sub (F Δ) (F Γ)
F : Tm ◇ (Δ ⇒ Γ) → Sub (◇▹Δ) (◇▹Γ)
F γ := we cannot define this
- γ[p]·q : Tm (◇▹Δ) (Γ[p])
  ⟨γ[p]·q⟩ : Sub (◇▹Δ) (◇▹Δ▹Γ[p])

F : M'.Ty Γ = Tm ◇ (Γ ⇒ U) ≅ Tm (◇▹Γ) U ≅ Ty (◇▹Γ) = M.Ty (F Γ)
F A := El(A[p]·q)

F : M'.Tm Γ A = Tm ◇ (Π Γ (El(A[p]·q))) ≅ Tm (◇▹Γ) (El(A[p]·q)) = M.Tm (F Γ) (F A)
** Minimisation
minimised rules:

[p][⁺]'  : (e:B[p][γ⁺]=B[γ][p]) → b[p][γ⁺] =ₑ b[γ][p]
q[⁺]'    : (e:B[p][γ⁺]=B[γ][p]) → q[γ⁺] =ₑ q
[p][⟨⟩]' : (e:B[p][⟨a⟩]=B) → b[p][⟨a⟩] =ₑ b
q[⟨⟩]'   : (e:B[p][⟨a⟩]=B) → q[⟨a⟩] =ₑ a
Πβ'      : (e:B[p⁺][⟨q⟩] = B) → lam b[p]·q =ₑ b
·[]'     : (e:B[⟨a⟩][γ] = B[γ⁺][⟨a[γ]⟩]) → (t·a)[γ] = t[γ]·(a[γ])
Πη'      : (e:B[p⁺][⟨q⟩] = B) → t =ₑ lam (t[p]·q)

- [p][⁺] : B[p][γ⁺]=B[γ][p]
  B[p][γ⁺] =
  El(c B)[p][γ⁺] =
  El(c B[p][γ⁺]) =([p][⁺]' U[])
  El(c B[γ][p]) =
  El(c B)[γ][p] =
  B[γ][p]
- [p][⁺] : b[p][γ⁺] =ₑ b[γ][p]
  [p][⁺] :＝ [p][⁺]' [p][⁺]
- q[⁺] : q[γ⁺] =ₑ q
  q[⁺] := q[⁺]' [p][⁺]
- [p][⟨⟩] : B[p][⟨a⟩]=B
  B[p][⟨a⟩] =
  El(c B)[p][⟨a⟩] =
  El(c B[p][⟨a⟩]) =([p][⟨⟩]' U[])
  El(c B) =
  B
- [p][⟨⟩] : b[p][⟨a⟩] =ₑ b
  [p][⟨⟩] := [p][⟨⟩]' [p][⟨⟩]
- q[⟨⟩] : q[⟨a⟩] =ₑ a
  q[⟨⟩] := q[⟨⟩]' [p][⟨⟩]
- Πβᵁ : lam B̂·a = B̂[⟨a⟩]     (B̂ : Tm Γ U)
  lam B̂·a =
  lam B̂·(q[⟨a⟩]) =
  (lam B̂[p][⟨a⟩])·(q[⟨a⟩]) =(·[]' U[])
  (lam B̂[p]·q)[⟨a⟩] =(Πβ' U[])
  B̂[⟨a⟩]
- [⟨⟩][] : B[⟨a⟩][γ] = B[γ⁺][⟨a[γ]⟩]
  B[⟨a⟩][γ] =
  El(c B[⟨a⟩][γ]) =(Πβᵁ)
  El((lam (c B)·a)[γ]) =(·[]' U[])
  El(lam (c B[γ⁺])·(a[γ])) =
  El(c B[γ⁺][⟨a[γ]⟩]) =
  B[γ⁺][⟨a[γ]⟩]
- [p⁺][⟨q⟩] : B[p⁺][⟨q⟩] = B
  B[p⁺][⟨q⟩] =
  El(c B[p⁺][⟨q⟩]) =(Πβᵁ)
  El(lam (c B[p⁺])·q]) =(lam[])
  El(lam (c B)[p]·q]) =(Πβ' U[])
  El (c B) =
  B
- ·[] : (t·a)[γ] = t[γ]·(a[γ])
  ·[] := ·[]' [⟨⟩][]
- Πη : t = lam (t[p]·q)
  Πη := Πη' [p⁺][⟨q⟩]
